/**
 * backbone-moment - Adds a moment.js getter/setter to Backbone.Model
 * @version v0.1.0
 * @link https://github.com/paulfalgout/backbone-moment
 * @license MIT
 */
{"version":3,"sources":["/source/backbone-moment.js"],"names":["global","factory","exports","module","require","define","amd","_","moment","Backbone","this","extend","Model","prototype","_moment","attr","val","opts","isUndefined","getMoment","setMoment","apply","arguments","formatMoment","toUTC","format","set","get"],"mappings":"CAMA,SAAWA,EAAQC,GACE,gBAAZC,UAA0C,mBAAXC,QAAyBF,EAAQG,QAAQ,cAAeA,QAAQ,UAAWA,QAAQ,aACvG,kBAAXC,SAAyBA,OAAOC,IAAMD,QAAQ,aAAc,SAAU,YAAaJ,GAC1FA,EAAQD,EAAOO,EAAGP,EAAOQ,OAAQR,EAAOS,WACxCC,KAAM,SAAUH,EAAGC,EAAQC,GAAY,YAEvCF,GAAEI,OAAOF,EAASG,MAAMC,WACtBC,QAASN,EACTA,OAAQ,SAASO,EAAMC,EAAKC,GAC1B,MAAGV,GAAEW,YAAYF,GACRN,KAAKS,UAAUJ,EAAME,GAEvBP,KAAKU,UAAUC,MAAMX,KAAMY,YAGpCC,aAAc,SAASR,EAAMC,GAC3B,MAAON,MAAKI,QAAQE,GAAKQ,QAAQC,UAEnCL,UAAW,SAASL,GAClB,MAAOL,MAAKgB,IAAIX,EAAML,KAAKa,aAAaF,MAAMX,KAAMY,aAEtDH,UAAW,SAASJ,GAClB,MAAOL,MAAKI,QAAQJ,KAAKiB,IAAIZ","file":"backbone-moment.min.js","sourcesContent":["/**\n * backbone-moment - Adds a moment.js getter/setter to Backbone.Model\n * @version v0.1.0\n * @link https://github.com/paulfalgout/backbone-moment\n * @license MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('underscore'), require('moment'), require('backbone')) :\n  typeof define === 'function' && define.amd ? define(['underscore', 'moment', 'backbone'], factory) :\n  factory(global._, global.moment, global.Backbone)\n}(this, function (_, moment, Backbone) { 'use strict';\n\n  _.extend(Backbone.Model.prototype, {\n    _moment: moment,\n    moment: function(attr, val, opts){\n      if(_.isUndefined(val)){\n        return this.getMoment(attr, opts);\n      }\n      return this.setMoment.apply(this, arguments);\n    },\n    // override with whatever default format your endpoints expect\n    formatMoment: function(attr, val){\n      return this._moment(val).toUTC().format();\n    },\n    setMoment: function(attr){\n      return this.set(attr, this.formatMoment.apply(this, arguments));\n    },\n    getMoment: function(attr){\n      return this._moment(this.get(attr));\n    }\n  });\n\n}));\n"],"sourceRoot":"/source/"}