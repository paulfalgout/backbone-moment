{"version":3,"sources":["backbone-moment.js"],"names":[],"mappings":";;;;;;AAMA,AAAC,CAAA,UAAU,MAAM,EAAE,OAAO,EAAE;AAC1B,SAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,GACrI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,YAAY,EAAE,QAAQ,EAAE,UAAU,CAAC,EAAE,OAAO,CAAC,GAClG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAA;CAClD,CAAA,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE;AAAE,cAAY,CAAC;;AAEpD,GAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE;AACjC,WAAO,EAAE,MAAM;AACf,UAAM,EAAE,gBAAS,IAAI,EAAE,GAAG,EAAE,IAAI,EAAC;AAC/B,UAAG,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,EAAC;AACpB,eAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;OACnC;AACD,aAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;KAC9C;;AAED,gBAAY,EAAE,sBAAS,IAAI,EAAE,GAAG,EAAC;AAC/B,aAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC;KAC3C;AACD,aAAS,EAAE,mBAAS,IAAI,EAAC;AACvB,aAAO,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;KACjE;AACD,aAAS,EAAE,mBAAS,IAAI,EAAC;AACvB,aAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;KACrC;GACF,CAAC,CAAC;CAEJ,CAAC,CAAE","file":"backbone-moment.js","sourcesContent":["/**\n * backbone-moment - Adds a moment.js getter/setter to Backbone.Model\n * @version v0.1.0\n * @link https://github.com/paulfalgout/backbone-moment\n * @license MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('underscore'), require('moment'), require('backbone')) :\n  typeof define === 'function' && define.amd ? define(['underscore', 'moment', 'backbone'], factory) :\n  factory(global._, global.moment, global.Backbone)\n}(this, function (_, moment, Backbone) { 'use strict';\n\n  _.extend(Backbone.Model.prototype, {\n    _moment: moment,\n    moment: function(attr, val, opts){\n      if(_.isUndefined(val)){\n        return this.getMoment(attr, opts);\n      }\n      return this.setMoment.apply(this, arguments);\n    },\n    // override with whatever default format your endpoints expect\n    formatMoment: function(attr, val){\n      return this._moment(val).toUTC().format();\n    },\n    setMoment: function(attr){\n      return this.set(attr, this.formatMoment.apply(this, arguments));\n    },\n    getMoment: function(attr){\n      return this._moment(this.get(attr));\n    }\n  });\n\n}));\n"],"sourceRoot":"/source/"}