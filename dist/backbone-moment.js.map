{"version":3,"sources":["backbone-moment.js"],"names":[],"mappings":";;;;;;AAMA,AAAC,CAAA,UAAU,MAAM,EAAE,OAAO,EAAE;AAC1B,SAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,GACrI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,YAAY,EAAE,QAAQ,EAAE,UAAU,CAAC,EAAE,OAAO,CAAC,GAClG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAA;CAClD,CAAA,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE;AAAE,cAAY,CAAC;;AAEpD,UAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC;;AAE3B,GAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE;AACjC,UAAM,EAAE,gBAAS,IAAI,EAAE,IAAI,EAAE,OAAO,EAAC;AACnC,UAAG,SAAS,CAAC,MAAM,KAAK,CAAC,EAAC;AACxB,eAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;OAC7B;AACD,aAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;KAC5C;;AAED,gBAAY,EAAE,sBAAS,IAAI,EAAE,IAAI,EAAC;AAChC,aAAO,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;KAC/C;AACD,aAAS,EAAE,mBAAS,IAAI,EAAE,IAAI,EAAE,OAAO,EAAC;AACtC,UAAI,UAAU,GAAG,IAAI,CAAC;;;AAGtB,UAAG,IAAI,IAAI,IAAI,KAAK,CAAC,EAAE;AACrB,kBAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;OACrD;;AAED,aAAO,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;KAC5C;AACD,aAAS,EAAE,mBAAS,IAAI,EAAC;AACvB,UAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;;AAG1B,UAAG,CAAC,IAAI,IAAI,IAAI,KAAK,CAAC,EAAE;AACtB,eAAO,IAAI,CAAC;OACb;;AAED,aAAO,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAChC;GACF,CAAC,CAAC;CAEJ,CAAC,CAAE","file":"backbone-moment.js","sourcesContent":["/**\n * backbone-moment - Adds a moment.js getter/setter to Backbone.Model\n * @version v0.2.0\n * @link https://github.com/paulfalgout/backbone-moment\n * @license MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('underscore'), require('moment'), require('backbone')) :\n  typeof define === 'function' && define.amd ? define(['underscore', 'moment', 'backbone'], factory) :\n  factory(global._, global.moment, global.Backbone)\n}(this, function (_, moment, Backbone) { 'use strict';\n\n  Backbone.__moment = moment;\n\n  _.extend(Backbone.Model.prototype, {\n    moment: function(attr, date, options){\n      if(arguments.length === 1){\n        return this.getMoment(attr);\n      }\n      return this.setMoment(attr, date, options);\n    },\n    // override with whatever default format your endpoints expect\n    formatMoment: function(attr, date){\n      return Backbone.__moment(date).utc().format();\n    },\n    setMoment: function(attr, date, options){\n      var dateString = date;\n\n      // if not '', null or undefined\n      if(date || date === 0) {\n        dateString = this.formatMoment(attr, date, options);\n      }\n\n      return this.set(attr, dateString, options);\n    },\n    getMoment: function(attr){\n      var date = this.get(attr);\n\n      // return '', null or undefined explicitly\n      if(!date && date !== 0) {\n        return date;\n      }\n\n      return Backbone.__moment(date);\n    }\n  });\n\n}));\n"],"sourceRoot":"/source/"}